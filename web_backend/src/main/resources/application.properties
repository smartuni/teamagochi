# Application configuration, see https://quarkus.io/guides/config-reference
#
# NOTE:
#  IntelliJ has a bug which prevents auto-completion for some attributes
#  including 'quarkus.datasource'. They appear greyed out and are marked
#  as 'Unused property' but even if they work as expected.
#  See https://youtrack.jetbrains.com/issue/IDEA-347787
#
# ENVIRONMENTS:
#  dev  - no external services needed, uses official leshan
#         demo server at https://leshan.eclipseprojects.io
#  test - unit and integration testing
#  prod - production setup
#
# ADDITIONAL PROFILES:
#  teashan  - use local leshan server instead of official demo server
#  keycloak - enable Keycloak integration for dev or other non-production profiles
#  postgres - enable Postgres integration for dev or other non-production profiles
#  publish  - push container image to GitHub container registry
#

# # # # # #
# Custom  #
# # # # # #

leshan.api-url=https://leshan.eclipseprojects.io/api
%prod.leshan.api-url=http://teashan:8080/api
%teashan.leshan.api-url=http://localhost:4000/leshan/api

keycloak.enabled=false
%prod.keycloak.enabled=true
%keycloak.keycloak.enabled=true

keycloak.auth-server-url=http://localhost:4000/kc/realms/teamagochi
%prod.keycloak.auth-server-url=http://keycloak:8080/kc/realms/teamagochi

dummydata.load=true
%prod.dummydata.load=false

postgres.jdbc.url=jdbc:postgresql://localhost:5432/backend?currentSchema=backend
%prod.postgres.jdbc.url=jdbc:postgresql://postgres:5432/backend?currentSchema=backend

container-image.build=false
container-image.publish=false
%prod.container-image.build=true
%publish.container-image.publish=true

# Game Cycle Scheduler
GameCycle.interval=5s
GameCycle.bigCrease=

# Secrets (all authors are aware that this should be secret in a realworld application)
db.password=postgres-backend-password

# # # # # #
# General #
# # # # # #

quarkus.http.cors=true
quarkus.http.cors.origins=*

%test.quarkus.http.test-timeout=5s
%test.quarkus.oidc.enabled=false
%test.quarkus.scheduler.enabled=false
%test.dummydata.load=false

# # # # # # # # #
# REST Clients  #
# # # # # # # # #

quarkus.rest-client.leshan-client-api.url=${leshan.api-url}
quarkus.rest-client.leshan-event-api.url=${leshan.api-url}
quarkus.rest-client.leshan-event-api.verify-host=false
quarkus.rest-client.leshan-event-api.http2=true

# Uncomment to print request logs to stdout
#quarkus.rest-client.logging.scope=request-response
#quarkus.rest-client.logging.body-limit=300
#quarkus.log.category."org.jboss.resteasy.reactive.client.logging".level=DEBUG

# # # # # # # # #
# REST Services #
# # # # # # # # #

quarkus.rest.path=/api

quarkus.swagger-ui.always-include=true

quarkus.smallrye-openapi.info-title=Teamagochi Backend API
quarkus.smallrye-openapi.info-version=1.0.0
quarkus.smallrye-openapi.info-description=The REST interface for the Teamagochi frontend application.

quarkus.smallrye-openapi.security-scheme=jwt
quarkus.smallrye-openapi.jwt-security-scheme-value=bearer
quarkus.smallrye-openapi.jwt-bearer-format=JWT

%prod.quarkus.smallrye-openapi.servers=http://localhost:4000/backend
%prod.quarkus.swagger-ui.urls.default=/backend/q/openapi

# # # # # # # # # #
# OIDC / Keycloak #
# # # # # # # # # #

# General OIDC Configuration
quarkus.oidc.enabled=${keycloak.enabled}
quarkus.oidc.client-id=teamagochi-backend
quarkus.oidc.credentials.secret=5DACLJH84KTWBG22UpdnS9DSjVCIu5zB
quarkus.oidc.auth-server-url=${keycloak.auth-server-url}
quarkus.oidc.tls.verification=none

# Keycloak extension
quarkus.keycloak.policy-enforcer.enable=true
quarkus.keycloak.policy-enforcer.enforcement-mode=ENFORCING
quarkus.keycloak.policy-enforcer.lazy-load-paths=true

# Policy rules
# For enforcement modes, see https://www.keycloak.org/docs/latest/authorization_services/#resource_server_settings.
quarkus.keycloak.policy-enforcer.paths.q.paths=/q/*
quarkus.keycloak.policy-enforcer.paths.q.enforcement-mode=DISABLED

# # # # # # #
# Database  #
# # # # # # #

quarkus.datasource.devservices.enabled=true
quarkus.datasource.db-kind=h2
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect

# Fixed port during development allows easier db inspection with Intellij
%dev.quarkus.datasource.devservices.port=5433

# Use postgres database on production
%prod,postgres.quarkus.datasource.devservices.enabled=false
%prod,postgres.quarkus.datasource.db-kind=postgresql
%prod,postgres.quarkus.datasource.db-version=15.6
%prod,postgres.quarkus.datasource.jdbc.url=${postgres.jdbc.url}
%prod,postgres.quarkus.datasource.username=backend
%prod,postgres.quarkus.datasource.password=${db.password}
%prod,postgres.quarkus.hibernate-orm.database.generation=update
%prod,postgres.quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect

# # # # # # # # # # #
# Container image   #
# # # # # # # # # # #

quarkus.container-image.builder=docker
quarkus.container-image.build=${container-image.build}
quarkus.container-image.push=${container-image.publish}
quarkus.container-image.registry=ghcr.io
quarkus.container-image.group=smartuni
quarkus.container-image.name=teamagochi/web-backend
quarkus.container-image.tag=snapshot
quarkus.container-image.labels."org.opencontainers.image.source"=https://github.com/smartuni/teamagochi
quarkus.container-image.labels."org.opencontainers.image.description"="Teamagochi Web-Backend"
quarkus.container-image.labels."org.opencontainers.image.licenses"=MIT
